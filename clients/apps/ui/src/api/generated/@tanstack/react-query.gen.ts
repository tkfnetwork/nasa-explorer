// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options,
  getAsteroids,
  wsAsteroidsPositions,
  getTodaysPicture,
} from '../sdk.gen';
import { queryOptions } from '@tanstack/react-query';
import type {
  GetAsteroidsData,
  WsAsteroidsPositionsData,
  GetTodaysPictureData,
} from '../types.gen';
import { client as _heyApiClient } from '../client.gen';

export type QueryKey<TOptions extends Options> = [
  Pick<TOptions, 'baseUrl' | 'body' | 'headers' | 'path' | 'query'> & {
    _id: string;
    _infinite?: boolean;
  },
];

const createQueryKey = <TOptions extends Options>(
  id: string,
  options?: TOptions,
  infinite?: boolean
): [QueryKey<TOptions>[0]] => {
  const params: QueryKey<TOptions>[0] = {
    _id: id,
    baseUrl: (options?.client ?? _heyApiClient).getConfig().baseUrl,
  } as QueryKey<TOptions>[0];
  if (infinite) {
    params._infinite = infinite;
  }
  if (options?.body) {
    params.body = options.body;
  }
  if (options?.headers) {
    params.headers = options.headers;
  }
  if (options?.path) {
    params.path = options.path;
  }
  if (options?.query) {
    params.query = options.query;
  }
  return [params];
};

export const getAsteroidsQueryKey = (options?: Options<GetAsteroidsData>) =>
  createQueryKey('getAsteroids', options);

/**
 * Get asteroids by date
 * Return a feed of asteroids by start and end date.
 *
 * **Max of 7 days of data can be returned from this endpoint**
 *
 */
export const getAsteroidsOptions = (options?: Options<GetAsteroidsData>) => {
  return queryOptions({
    queryFn: async ({ queryKey, signal }) => {
      const { data } = await getAsteroids({
        ...options,
        ...queryKey[0],
        signal,
        throwOnError: true,
      });
      return data;
    },
    queryKey: getAsteroidsQueryKey(options),
  });
};

export const wsAsteroidsPositionsQueryKey = (
  options?: Options<WsAsteroidsPositionsData>
) => createQueryKey('wsAsteroidsPositions', options);

/**
 * Websocket endpoint for retrieving asteroids positions
 */
export const wsAsteroidsPositionsOptions = (
  options?: Options<WsAsteroidsPositionsData>
) => {
  return queryOptions({
    queryFn: async ({ queryKey, signal }) => {
      const { data } = await wsAsteroidsPositions({
        ...options,
        ...queryKey[0],
        signal,
        throwOnError: true,
      });
      return data;
    },
    queryKey: wsAsteroidsPositionsQueryKey(options),
  });
};

export const getTodaysPictureQueryKey = (
  options?: Options<GetTodaysPictureData>
) => createQueryKey('getTodaysPicture', options);

/**
 * Get picture of the day
 * Returns the picture of the day large and small images
 */
export const getTodaysPictureOptions = (
  options?: Options<GetTodaysPictureData>
) => {
  return queryOptions({
    queryFn: async ({ queryKey, signal }) => {
      const { data } = await getTodaysPicture({
        ...options,
        ...queryKey[0],
        signal,
        throwOnError: true,
      });
      return data;
    },
    queryKey: getTodaysPictureQueryKey(options),
  });
};
