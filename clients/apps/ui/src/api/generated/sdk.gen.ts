// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type {
  GetAsteroidsData,
  GetAsteroidsResponses,
  GetAsteroidsErrors,
  WsAsteroidsPositionsData,
  GetTodaysPictureData,
  GetTodaysPictureResponses,
  GetTodaysPictureErrors,
} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Get asteroids by date
 * Return a feed of asteroids by start and end date.
 *
 * **Max of 7 days of data can be returned from this endpoint**
 *
 */
export const getAsteroids = <ThrowOnError extends boolean = false>(
  options?: Options<GetAsteroidsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAsteroidsResponses,
    GetAsteroidsErrors,
    ThrowOnError
  >({
    url: '/asteroids',
    ...options,
  });
};

/**
 * Websocket endpoint for retrieving asteroids positions
 */
export const wsAsteroidsPositions = <ThrowOnError extends boolean = false>(
  options?: Options<WsAsteroidsPositionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>(
    {
      url: '/asteroids/positions',
      ...options,
    }
  );
};

/**
 * Get picture of the day
 * Returns the picture of the day large and small images
 */
export const getTodaysPicture = <ThrowOnError extends boolean = false>(
  options?: Options<GetTodaysPictureData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetTodaysPictureResponses,
    GetTodaysPictureErrors,
    ThrowOnError
  >({
    url: '/pictures/today',
    ...options,
  });
};
