// This file is auto-generated by @hey-api/openapi-ts

export type ErrorResponse = {
  error?: string;
};

export type ValidationError = {
  [key: string]: Array<string>;
};

export type ValidationErrorResponse = {
  error?: {
    query?: Array<ValidationError>;
  };
};

export type Picture = {
  large?: string;
  small?: string;
};

export type NearEarthObject = {
  id?: string;
  neo_reference_id?: string;
  name?: string;
  nasa_jpl_url?: string;
  absolute_magnitude_h?: number;
  estimated_diameter?: {
    kilometers?: DiameterRange;
    meters?: DiameterRange;
    miles?: DiameterRange;
    feet?: DiameterRange;
  };
  is_potentially_hazardous_asteroid?: boolean;
  close_approach_data?: Array<CloseApproachData>;
  is_sentry_object?: boolean;
};

export type NearEarthObjectWithOrbital = NearEarthObject & {
  orbital_data?: OrbitalData;
};

export type DiameterRange = {
  estimated_diameter_min?: number;
  estimated_diameter_max?: number;
};

export type CloseApproachData = {
  close_approach_date?: string;
  close_approach_date_full?: string;
  epoch_date_close_approach?: number;
  relative_velocity?: {
    kilometers_per_second?: string;
    kilometers_per_hour?: string;
    miles_per_hour?: string;
  };
  miss_distance?: {
    astronomical?: string;
    lunar?: string;
    kilometers?: string;
    miles?: string;
  };
  orbiting_body?: string;
};

export type OrbitalData = {
  orbit_id?: string;
  orbit_determination_date?: string;
  first_observation_date?: string;
  last_observation_date?: string;
  data_arc_in_days?: number;
  observations_used?: number;
  orbit_uncertainty?: string;
  minimum_orbit_intersection?: string;
  jupiter_tisserand_invariant?: string;
  epoch_osculation?: string;
  eccentricity?: string;
  semi_major_axis?: string;
  inclination?: string;
  ascending_node_longitude?: string;
  orbital_period?: string;
  perihelion_distance?: string;
  perihelion_argument?: string;
  aphelion_distance?: string;
  perihelion_time?: string;
  mean_anomaly?: string;
  mean_motion?: string;
  equinox?: string;
  orbit_class?: {
    orbit_class_type?: string;
    orbit_class_description?: string;
    orbit_class_range?: string;
  };
};

export type StartDate = string;

export type EndDate = string;

export type GetAsteroidsData = {
  body?: never;
  path?: never;
  query?: {
    startDate?: string;
    endDate?: string;
  };
  url: '/asteroids';
};

export type GetAsteroidsErrors = {
  /**
   * Bad request
   */
  400: ValidationErrorResponse;
  /**
   * Internal Server Error
   */
  500: ErrorResponse;
};

export type GetAsteroidsError = GetAsteroidsErrors[keyof GetAsteroidsErrors];

export type GetAsteroidsResponses = {
  /**
   * Date keyed asteroid results
   */
  200: {
    data?: {
      [key: string]: Array<NearEarthObject>;
    };
    total?: number;
  };
};

export type GetAsteroidsResponse =
  GetAsteroidsResponses[keyof GetAsteroidsResponses];

export type WsAsteroidsPositionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/asteroids/positions';
};

export type GetTodaysPictureData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/pictures/today';
};

export type GetTodaysPictureErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse;
};

export type GetTodaysPictureError =
  GetTodaysPictureErrors[keyof GetTodaysPictureErrors];

export type GetTodaysPictureResponses = {
  /**
   * Object containing high res and low res image urls
   */
  200: {
    data?: Picture;
  };
};

export type GetTodaysPictureResponse =
  GetTodaysPictureResponses[keyof GetTodaysPictureResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
